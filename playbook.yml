---
- name: Install Prometheus and Grafana
  hosts: all
  become: true
  vars:
    prometheus_version: 2.23.0
    grafana_version: 7.5.2
    node_exporter_version: "1.1.2"
    node_exporter_bin: /usr/local/bin/node_exporter
    node_exporter_user: node-exporter
    node_exporter_group: "{{ node_exporter_user }}"
    node_exporter_dir_conf: /etc/node_exporter
  tasks:
  - name: Install dependencies
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - wget
      - tar
      - curl
      - apt-transport-https
      - software-properties-common

  - name: check if node exporter exist
    stat:
      path: "{{ node_exporter_bin }}"
    register: __check_node_exporter_present
  
  - name: create node exporter user
    user:
      name: "{{ node_exporter_user }}"
      append: true
      shell: /usr/sbin/nologin
      system: true
      create_home: false
  
  - name: create node exporter config dir
    file:
      path: "{{ node_exporter_dir_conf }}"
      state: directory
      owner: "{{ node_exporter_user }}"
      group: "{{ node_exporter_group }}"
  
  - name: if node exporter exist get version
    shell: "cat /etc/systemd/system/node_exporter.service | grep Version | sed s/'.*Version '//g"
    when: __check_node_exporter_present.stat.exists == true
    changed_when: false
    register: __get_node_exporter_version
    
  - name: download and unzip node exporter if not exist
    unarchive:
      src: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
      dest: /tmp/
      remote_src: yes
      validate_certs: no
  
  - name: move the binary to the final destination
    copy:
      src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
      dest: "{{ node_exporter_bin }}"
      owner: "{{ node_exporter_user }}"
      group: "{{ node_exporter_group }}"
      mode: 0755
      remote_src: yes
    when: __check_node_exporter_present.stat.exists == false or not __get_node_exporter_version.stdout == node_exporter_version
  
  - name: clean
    file:
      path: /tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/
      state: absent
  
  - name: install service
    template:
      src: templates/node_exporter.service.j2
      dest: /etc/systemd/system/node_exporter.service
      owner: root
      group: root
      mode: 0755
  - meta: flush_handlers
  
  - name: service always started
    systemd:
      name: node_exporter
      state: started
      enabled: yes

  - name: Download grafana public-key
    ansible.builtin.get_url:
      url: https://apt.grafana.com/gpg.key
      dest: /usr/share/keyrings/grafana.key
      mode: '0440'

  - name: Add specified repository into sources list
    shell: echo "deb [trusted=yes] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list

  - name: Install grafana
    apt:
      name: grafana
      state: present
      update_cache: yes

  - name: Create Grafana user
    user:
      name: grafana
      group: grafana
      home: /opt/grafana-{{ grafana_version }}.linux-amd64
      shell: /sbin/nologin
      createhome: yes

  - name: Change ownership of grafana directory
    file:
      path: /opt/grafana-{{ grafana_version }}.linux-amd64
      owner: grafana
      group: grafana
      mode: '0755'

  - name: Create grafana configuration directory
    file:
      path: /etc/grafana
      owner: grafana
      group: grafana
      mode: '0755'
      state: directory

  - name: Copy Grafana configuration file
    template:
      src: templates/grafana.ini.j2
      dest: /etc/grafana/grafana.yml
      owner: grafana
      group: grafana
      mode: '0644'

  - name: Enable and start grafana service
    systemd:
      name: grafana-server
      state: started
      enabled: yes

  - name: Install Promotheus
    apt:
      name: prometheus
      state: present

  - name: Create Prometheus configuration directory
    file:
      path: /etc/prometheus
      owner: prometheus
      group: prometheus
      mode: '0755'
      state: directory

  - name: Copy Prometheus configuration file
    template:
      src: templates/prometheus.yml.j2
      dest: /etc/prometheus/prometheus.yml
      owner: prometheus
      group: prometheus
      mode: '0644'

  - name: Enable and start Prometheus service
    systemd:
      name: prometheus
      state: started
      enabled: yes
